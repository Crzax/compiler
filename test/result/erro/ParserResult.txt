
----------------------------------语法分析过程----------------------------------

第1步
分析栈:<函数定义> # 
遗留串:type id ( ) { id = digit + ; return digit ; } # 
行为: <函数定义>-><修饰词闭包><类型><变量>(<参数声明>){<函数块>}

第2步
分析栈:<修饰词闭包> <类型> <变量> ( <参数声明> ) { <函数块> } # 
遗留串:type id ( ) { id = digit + ; return digit ; } # 
行为: <修饰词闭包>->$

第3步
分析栈:<类型> <变量> ( <参数声明> ) { <函数块> } # 
遗留串:type id ( ) { id = digit + ; return digit ; } # 
行为: <类型>->type<取地址>

第4步
分析栈:type <取地址> <变量> ( <参数声明> ) { <函数块> } # 
遗留串:type id ( ) { id = digit + ; return digit ; } # 
行为: type匹配 

第5步
分析栈:<取地址> <变量> ( <参数声明> ) { <函数块> } # 
遗留串:id ( ) { id = digit + ; return digit ; } # 
行为: <取地址>-><星号闭包>

第6步
分析栈:<星号闭包> <变量> ( <参数声明> ) { <函数块> } # 
遗留串:id ( ) { id = digit + ; return digit ; } # 
行为: <星号闭包>->$

第7步
分析栈:<变量> ( <参数声明> ) { <函数块> } # 
遗留串:id ( ) { id = digit + ; return digit ; } # 
行为: <变量>-><标志符><数组下标>

第8步
分析栈:<标志符> <数组下标> ( <参数声明> ) { <函数块> } # 
遗留串:id ( ) { id = digit + ; return digit ; } # 
行为: <标志符>->id

第9步
分析栈:id <数组下标> ( <参数声明> ) { <函数块> } # 
遗留串:id ( ) { id = digit + ; return digit ; } # 
行为: id匹配 

第10步
分析栈:<数组下标> ( <参数声明> ) { <函数块> } # 
遗留串:( ) { id = digit + ; return digit ; } # 
行为: <数组下标>->$

第11步
分析栈:( <参数声明> ) { <函数块> } # 
遗留串:( ) { id = digit + ; return digit ; } # 
行为: (匹配 

第12步
分析栈:<参数声明> ) { <函数块> } # 
遗留串:) { id = digit + ; return digit ; } # 
行为: <参数声明>->$

第13步
分析栈:) { <函数块> } # 
遗留串:) { id = digit + ; return digit ; } # 
行为: )匹配 

第14步
分析栈:{ <函数块> } # 
遗留串:{ id = digit + ; return digit ; } # 
行为: {匹配 

第15步
分析栈:<函数块> } # 
遗留串:id = digit + ; return digit ; } # 
行为: <函数块>-><声明语句闭包><函数块闭包>

第16步
分析栈:<声明语句闭包> <函数块闭包> } # 
遗留串:id = digit + ; return digit ; } # 
行为: <声明语句闭包>->$

第17步
分析栈:<函数块闭包> } # 
遗留串:id = digit + ; return digit ; } # 
行为: <函数块闭包>-><赋值函数><函数块闭包>

第18步
分析栈:<赋值函数> <函数块闭包> } # 
遗留串:id = digit + ; return digit ; } # 
行为: <赋值函数>-><变量><赋值或函数调用>

第19步
分析栈:<变量> <赋值或函数调用> <函数块闭包> } # 
遗留串:id = digit + ; return digit ; } # 
行为: <变量>-><标志符><数组下标>

第20步
分析栈:<标志符> <数组下标> <赋值或函数调用> <函数块闭包> } # 
遗留串:id = digit + ; return digit ; } # 
行为: <标志符>->id

第21步
分析栈:id <数组下标> <赋值或函数调用> <函数块闭包> } # 
遗留串:id = digit + ; return digit ; } # 
行为: id匹配 

第22步
分析栈:<数组下标> <赋值或函数调用> <函数块闭包> } # 
遗留串:= digit + ; return digit ; } # 
行为: <数组下标>->$

第23步
分析栈:<赋值或函数调用> <函数块闭包> } # 
遗留串:= digit + ; return digit ; } # 
行为: <赋值或函数调用>->=<右值>;

第24步
分析栈:= <右值> ; <函数块闭包> } # 
遗留串:= digit + ; return digit ; } # 
行为: =匹配 

第25步
分析栈:<右值> ; <函数块闭包> } # 
遗留串:digit + ; return digit ; } # 
行为: <右值>-><表达式>

第26步
分析栈:<表达式> ; <函数块闭包> } # 
遗留串:digit + ; return digit ; } # 
行为: <表达式>-><因子><项>

第27步
分析栈:<因子> <项> ; <函数块闭包> } # 
遗留串:digit + ; return digit ; } # 
行为: <因子>-><因式><因式递归>

第28步
分析栈:<因式> <因式递归> <项> ; <函数块闭包> } # 
遗留串:digit + ; return digit ; } # 
行为: <因式>-><数字>

第29步
分析栈:<数字> <因式递归> <项> ; <函数块闭包> } # 
遗留串:digit + ; return digit ; } # 
行为: <数字>->digit

第30步
分析栈:digit <因式递归> <项> ; <函数块闭包> } # 
遗留串:digit + ; return digit ; } # 
行为: digit匹配 

第31步
分析栈:<因式递归> <项> ; <函数块闭包> } # 
遗留串:+ ; return digit ; } # 
行为: <因式递归>->$

第32步
分析栈:<项> ; <函数块闭包> } # 
遗留串:+ ; return digit ; } # 
行为: <项>->+<因子><项>

第33步
分析栈:+ <因子> <项> ; <函数块闭包> } # 
遗留串:+ ; return digit ; } # 
行为: +匹配 

第34步
分析栈:<因子> <项> ; <函数块闭包> } # 
遗留串:; return digit ; } # 
Error

----------------------------------语法树---------------------------------------

<函数定义>
  }
  <函数块>
  {
  )
  <参数声明>
  (
  <变量>
  <类型>
  <修饰词闭包>
    <函数块闭包>
    <声明语句闭包>
    <数组下标>
    <标志符>
    <取地址>
    type
      <函数块闭包>
      <赋值函数>
      id
      <星号闭包>
        <赋值或函数调用>
        <变量>
          ;
          <右值>
          =
          <数组下标>
          <标志符>
            <表达式>
            id
              <项>
              <因子>
                <项>
                <因子>
                +
                <因式递归>
                <因式>
                  <数字>
                    digit
